Red/System [
	Title:   "utf-8-utils verify unit tests"
	Author:  "Peter W A Wood"
	File: 	 %verify-test.reds
	Version: 0.0.1
	Rights:  "Copyright (C) 2011 Peter W A Wood. All rights reserved."
	License: "BSD-3 - https://github.com/dockimbel/Red/blob/master/BSD-3-License.txt"
]

;; This file is generated by make-verfiy-testr
;; DO NOT EDIT IT MANUALLY

#include %../utf-8-utils.reds
#include %/Users/peter/Languages/Red/red-system/tests/quick-test/quick-test.reds

~~~start-file~~~ "verify"
  --test-- "verify-1"
  --assert 0 = PWAW-UU-verify "a"
  --test-- "verify-2"
  --assert 0 = PWAW-UU-verify "a very straightforward string"
  --test-- "verify-3"
  --assert 1 = PWAW-UU-verify "^(C0)"
  --test-- "verify-4"
  --assert 21 = PWAW-UU-verify "12345678901234567890^(C0)"
  --test-- "verify-5"
  --assert 1 = PWAW-UU-verify "^(C1)"
  --test-- "verify-6"
  --assert 1 = PWAW-UU-verify "^(F5)"
  --test-- "verify-7"
  --assert 0 = PWAW-UU-verify "^(C2)^(80)"
  --test-- "verify-8"
  --assert 0 = PWAW-UU-verify "^(C2)^(BF)"
  --test-- "verify-9"
  --assert 0 = PWAW-UU-verify "^(DF)^(80)"
  --test-- "verify-10"
  --assert 0 = PWAW-UU-verify "^(DF)^(BF)"
  --test-- "verify-11"
  --assert 0 = PWAW-UU-verify "a simple string^(C2)^(80)another simple string"
  --test-- "verify-12"
  --assert 0 = PWAW-UU-verify "a simple string^(C2)^(BF)another simple string"
  --test-- "verify-13"
  --assert 0 = PWAW-UU-verify "a simple string^(DF)^(80)another simple string"
  --test-- "verify-14"
  --assert 0 = PWAW-UU-verify "a simple string^(DF)^(BF)another simple string"
  --test-- "verify-15"
  --assert 1 = PWAW-UU-verify "^(C2)^(7F)"
  --test-- "verify-16"
  --assert 1 = PWAW-UU-verify "^(C2)^(C0)"
  --test-- "verify-17"
  --assert 1 = PWAW-UU-verify "^(DF)^(7F)"
  --test-- "verify-18"
  --assert 1 = PWAW-UU-verify "^(DF)^(C0)"
  --test-- "verify-19"
  --assert 11 = PWAW-UU-verify "0123456789^(C2)^(7F)0123456789"
  --test-- "verify-20"
  --assert 11 = PWAW-UU-verify "0123456789^(C2)^(C0)0123456789"
  --test-- "verify-21"
  --assert 11 = PWAW-UU-verify "0123456789^(DF)^(7F)0123456789"
  --test-- "verify-22"
  --assert 11 = PWAW-UU-verify "0123456789^(DF)^(C0)0123456789"
  --test-- "verify-23"
  --assert 0 = PWAW-UU-verify "^(E0)^(80)^(80)"
  --test-- "verify-24"
  --assert 0 = PWAW-UU-verify "^(E0)^(80)^(BF)"
  --test-- "verify-25"
  --assert 0 = PWAW-UU-verify "^(E0)^(BF)^(80)"
  --test-- "verify-26"
  --assert 0 = PWAW-UU-verify "^(E0)^(BF)^(BF)"
  --test-- "verify-27"
  --assert 0 = PWAW-UU-verify "^(EF)^(80)^(80)"
  --test-- "verify-28"
  --assert 0 = PWAW-UU-verify "^(EF)^(80)^(BF)"
  --test-- "verify-29"
  --assert 0 = PWAW-UU-verify "^(EF)^(BF)^(80)"
  --test-- "verify-30"
  --assert 0 = PWAW-UU-verify "^(EF)^(BF)^(BF)"
  --test-- "verify-31"
  --assert 0 = PWAW-UU-verify "string^(E0)^(80)^(80)string"
  --test-- "verify-32"
  --assert 0 = PWAW-UU-verify "string^(E0)^(80)^(BF)string"
  --test-- "verify-33"
  --assert 0 = PWAW-UU-verify "string^(E0)^(BF)^(80)string"
  --test-- "verify-34"
  --assert 0 = PWAW-UU-verify "string^(E0)^(BF)^(BF)string"
  --test-- "verify-35"
  --assert 0 = PWAW-UU-verify "string^(EF)^(80)^(80)string"
  --test-- "verify-36"
  --assert 0 = PWAW-UU-verify "string^(EF)^(80)^(BF)string"
  --test-- "verify-37"
  --assert 0 = PWAW-UU-verify "string^(EF)^(BF)^(80)string"
  --test-- "verify-38"
  --assert 0 = PWAW-UU-verify "string^(EF)^(BF)^(BF)string"
  --test-- "verify-39"
  --assert 1 = PWAW-UU-verify "^(E0)^(7F)^(7F)"
  --test-- "verify-40"
  --assert 1 = PWAW-UU-verify "^(E0)^(7F)^(C0)"
  --test-- "verify-41"
  --assert 1 = PWAW-UU-verify "^(E0)^(C0)^(7F)"
  --test-- "verify-42"
  --assert 1 = PWAW-UU-verify "^(E0)^(C0)^(C0)"
  --test-- "verify-43"
  --assert 1 = PWAW-UU-verify "^(EF)^(7F)^(7F)"
  --test-- "verify-44"
  --assert 1 = PWAW-UU-verify "^(EF)^(7F)^(C0)"
  --test-- "verify-45"
  --assert 1 = PWAW-UU-verify "^(EF)^(C0)^(7F)"
  --test-- "verify-46"
  --assert 1 = PWAW-UU-verify "^(EF)^(C0)^(C0)"
  --test-- "verify-47"
  --assert 7 = PWAW-UU-verify "string^(E0)^(7F)^(7F)string"
  --test-- "verify-48"
  --assert 7 = PWAW-UU-verify "string^(E0)^(7F)^(C0)string"
  --test-- "verify-49"
  --assert 7 = PWAW-UU-verify "string^(E0)^(C0)^(7F)string"
  --test-- "verify-50"
  --assert 7 = PWAW-UU-verify "string^(E0)^(C0)^(C0)string"
  --test-- "verify-51"
  --assert 7 = PWAW-UU-verify "string^(EF)^(7F)^(7F)string"
  --test-- "verify-52"
  --assert 7 = PWAW-UU-verify "string^(EF)^(7F)^(C0)string"
  --test-- "verify-53"
  --assert 7 = PWAW-UU-verify "string^(EF)^(C0)^(7F)string"
  --test-- "verify-54"
  --assert 7 = PWAW-UU-verify "string^(EF)^(C0)^(C0)string"
  --test-- "verify-55"
  --assert 0 = PWAW-UU-verify "^(F0)^(80)^(80)^(80)"
  --test-- "verify-56"
  --assert 0 = PWAW-UU-verify "^(F0)^(80)^(80)^(BF)"
  --test-- "verify-57"
  --assert 0 = PWAW-UU-verify "^(F0)^(80)^(BF)^(80)"
  --test-- "verify-58"
  --assert 0 = PWAW-UU-verify "^(F0)^(80)^(BF)^(BF)"
  --test-- "verify-59"
  --assert 0 = PWAW-UU-verify "^(F0)^(BF)^(80)^(80)"
  --test-- "verify-60"
  --assert 0 = PWAW-UU-verify "^(F0)^(BF)^(80)^(BF)"
  --test-- "verify-61"
  --assert 0 = PWAW-UU-verify "^(F0)^(BF)^(BF)^(80)"
  --test-- "verify-62"
  --assert 0 = PWAW-UU-verify "^(F0)^(BF)^(BF)^(BF)"
  --test-- "verify-63"
  --assert 0 = PWAW-UU-verify "^(F4)^(80)^(80)^(80)"
  --test-- "verify-64"
  --assert 0 = PWAW-UU-verify "^(F4)^(80)^(80)^(BF)"
  --test-- "verify-65"
  --assert 0 = PWAW-UU-verify "^(F4)^(80)^(BF)^(80)"
  --test-- "verify-66"
  --assert 0 = PWAW-UU-verify "^(F4)^(80)^(BF)^(BF)"
  --test-- "verify-67"
  --assert 0 = PWAW-UU-verify "^(F4)^(BF)^(80)^(80)"
  --test-- "verify-68"
  --assert 0 = PWAW-UU-verify "^(F4)^(BF)^(80)^(BF)"
  --test-- "verify-69"
  --assert 0 = PWAW-UU-verify "^(F4)^(BF)^(BF)^(80)"
  --test-- "verify-70"
  --assert 0 = PWAW-UU-verify "^(F4)^(BF)^(BF)^(BF)"
  --test-- "verify-71"
  --assert 0 = PWAW-UU-verify "string^(F0)^(80)^(80)^(80)nonsense"
  --test-- "verify-72"
  --assert 0 = PWAW-UU-verify "string^(F0)^(80)^(80)^(BF)nonsense"
  --test-- "verify-73"
  --assert 0 = PWAW-UU-verify "string^(F0)^(80)^(BF)^(80)nonsense"
  --test-- "verify-74"
  --assert 0 = PWAW-UU-verify "string^(F0)^(80)^(BF)^(BF)nonsense"
  --test-- "verify-75"
  --assert 0 = PWAW-UU-verify "string^(F0)^(BF)^(80)^(80)nonsense"
  --test-- "verify-76"
  --assert 0 = PWAW-UU-verify "string^(F0)^(BF)^(80)^(BF)nonsense"
  --test-- "verify-77"
  --assert 0 = PWAW-UU-verify "string^(F0)^(BF)^(BF)^(80)nonsense"
  --test-- "verify-78"
  --assert 0 = PWAW-UU-verify "string^(F0)^(BF)^(BF)^(BF)nonsense"
  --test-- "verify-79"
  --assert 0 = PWAW-UU-verify "string^(F4)^(80)^(80)^(80)nonsense"
  --test-- "verify-80"
  --assert 0 = PWAW-UU-verify "string^(F4)^(80)^(80)^(BF)nonsense"
  --test-- "verify-81"
  --assert 0 = PWAW-UU-verify "string^(F4)^(80)^(BF)^(80)nonsense"
  --test-- "verify-82"
  --assert 0 = PWAW-UU-verify "string^(F4)^(80)^(BF)^(BF)nonsense"
  --test-- "verify-83"
  --assert 0 = PWAW-UU-verify "string^(F4)^(BF)^(80)^(80)nonsense"
  --test-- "verify-84"
  --assert 0 = PWAW-UU-verify "string^(F4)^(BF)^(80)^(BF)nonsense"
  --test-- "verify-85"
  --assert 0 = PWAW-UU-verify "string^(F4)^(BF)^(BF)^(80)nonsense"
  --test-- "verify-86"
  --assert 0 = PWAW-UU-verify "string^(F4)^(BF)^(BF)^(BF)nonsense"
  --test-- "verify-87"
  --assert 1 = PWAW-UU-verify "^(F0)^(7F)^(7F)^(7F)"
  --test-- "verify-88"
  --assert 1 = PWAW-UU-verify "^(F0)^(7F)^(7F)^(C0)"
  --test-- "verify-89"
  --assert 1 = PWAW-UU-verify "^(F0)^(7F)^(C0)^(7F)"
  --test-- "verify-90"
  --assert 1 = PWAW-UU-verify "^(F0)^(7F)^(C0)^(C0)"
  --test-- "verify-91"
  --assert 1 = PWAW-UU-verify "^(F0)^(C0)^(7F)^(7F)"
  --test-- "verify-92"
  --assert 1 = PWAW-UU-verify "^(F0)^(C0)^(7F)^(C0)"
  --test-- "verify-93"
  --assert 1 = PWAW-UU-verify "^(F0)^(C0)^(C0)^(7F)"
  --test-- "verify-94"
  --assert 1 = PWAW-UU-verify "^(F0)^(C0)^(C0)^(C0)"
  --test-- "verify-95"
  --assert 1 = PWAW-UU-verify "^(F4)^(7F)^(7F)^(7F)"
  --test-- "verify-96"
  --assert 1 = PWAW-UU-verify "^(F4)^(7F)^(7F)^(C0)"
  --test-- "verify-97"
  --assert 1 = PWAW-UU-verify "^(F4)^(7F)^(C0)^(7F)"
  --test-- "verify-98"
  --assert 1 = PWAW-UU-verify "^(F4)^(7F)^(C0)^(C0)"
  --test-- "verify-99"
  --assert 1 = PWAW-UU-verify "^(F4)^(C0)^(7F)^(7F)"
  --test-- "verify-100"
  --assert 1 = PWAW-UU-verify "^(F4)^(C0)^(7F)^(C0)"
  --test-- "verify-101"
  --assert 1 = PWAW-UU-verify "^(F4)^(C0)^(C0)^(7F)"
  --test-- "verify-102"
  --assert 1 = PWAW-UU-verify "^(F4)^(C0)^(C0)^(C0)"
  --test-- "verify-103"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(7F)^(7F)^(7F)efghijlk"
  --test-- "verify-104"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(7F)^(7F)^(C0)efghijlk"
  --test-- "verify-105"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(7F)^(C0)^(7F)efghijlk"
  --test-- "verify-106"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(7F)^(C0)^(C0)efghijlk"
  --test-- "verify-107"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(C0)^(7F)^(7F)efghijlk"
  --test-- "verify-108"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(C0)^(7F)^(C0)efghijlk"
  --test-- "verify-109"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(C0)^(C0)^(7F)efghijlk"
  --test-- "verify-110"
  --assert 5 = PWAW-UU-verify "abcd^(F0)^(C0)^(C0)^(C0)efghijlk"
  --test-- "verify-111"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(7F)^(7F)^(7F)efghijlk"
  --test-- "verify-112"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(7F)^(7F)^(C0)efghijlk"
  --test-- "verify-113"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(7F)^(C0)^(7F)efghijlk"
  --test-- "verify-114"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(7F)^(C0)^(C0)efghijlk"
  --test-- "verify-115"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(C0)^(7F)^(7F)efghijlk"
  --test-- "verify-116"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(C0)^(7F)^(C0)efghijlk"
  --test-- "verify-117"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(C0)^(C0)^(7F)efghijlk"
  --test-- "verify-118"
  --assert 5 = PWAW-UU-verify "abcd^(F4)^(C0)^(C0)^(C0)efghijlk"
~~~end-file~~~
